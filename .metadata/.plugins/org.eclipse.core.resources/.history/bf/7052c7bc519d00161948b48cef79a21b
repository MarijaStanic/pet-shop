var app = angular.module('myApp');

app.controller('IndexCtrl', ['$scope','$location','sessionService', function($scope,$location, sessionService) {	
	
	if (!$scope.logged) {
		$location.path('/login');
	} else {
		$location.path('/home');
	}
	
	$scope.isActive = function (viewLocation) {
	     var active = (viewLocation === $location.path());
	     return active;
	};
	
	$scope.isAuthorised = function(allowedRoles) {
		var roles = allowedRoles.split(',');
		for (var i = 0; i < roles.length; i++) {
			allowed = sessionService.isAuthorised(roles[i]);
			if (allowed) {
				return true;
			}
		}
		return false;
	}
}]);

app.controller('LoginCtrl',['$rootScope','$scope','$http','$location','sessionService',function($rootScope,$scope,$http,$location,sessionService) {
	
	$rootScope.error = false;
	var vm=this;
	$scope.login = function(){
		var config = {
				params: {
					username: $scope.username,
					password: $scope.password
				}
		}
		sessionService.login(config).then(function(response){
			$rootScope.logged = true;
			$rootScope.loggedUser = sessionService.getUser();
			$location.path('/home');
		},function(){
			$rootScope.logged = false;
			$rootScope.error = true;
		});
	}
}]);

app.controller('HomeCtrl', function($scope){
	
	/*$scope.updateUser = function() {
		userService.update().then(function(resp){
		}, function(error){
			alert(error.data);
		});

	};*/}
});

app.controller('UsersCtrl'   ['$scope', 'UserService', function($scope, UserService){
	
	var self = this;
    self.user={id:null,username:'',address:'',email:''};
    self.users=[];
 
    self.submit = submit;
    self.edit = edit;
    self.remove = remove;
    self.reset = reset;
 
 
    getAllUsers();
 
   /* function getAllUsers(){
    	UserService.getAllUsers().then(function(data){
        	alert(data);
    		self.users = data;
    	}, function(error){
    		alert(error.data);
    	});
    }*/
    
    function getAllUsers(){
    	UserService.getAllUsers().then(function(response){
        	alert(response.data);
    		self.users = response.data;
    	}, function(error){
    		alert(error.data);
    	});
    }
 
    function edit(id){
        console.log('id to be edited', id);
        for(var i = 0; i < self.users.length; i++){
            if(self.users[i].id === id) {
                self.user = angular.copy(self.users[i]);
                break;
            }
        }
    }
    
    function submit() {
        if(self.user.id===null){
            console.log('Saving New User', self.user);
            createUser(self.user);
        }else{
            updateUser(self.user, self.user.id);
            console.log('User updated with id ', self.user.id);
        }
        reset();
    }
    
    function createUser(user){
        UserService.createUser(user)
            .then(
            fetchAllUsers,
            function(errResponse){
                console.error('Error while creating User');
            }
        );
    }
 
    function updateUser(user, id){
        UserService.updateUser(user, id)
            .then(
            getAllUsers,
            function(errResponse){
                console.error('Error while updating User');
            }
        );
    }
 
    function deleteUser(id){
        UserService.deleteUser(id)
            .then(
            fetchAllUsers,
            function(errResponse){
                console.error('Error while deleting User');
            }
        );
    }
 
    function remove(id){
        console.log('id to be deleted', id);
        if(self.user.id === id) {//clean form if the user to be deleted is shown there.
            reset();
        }
        deleteUser(id);
    }
 
 
    function reset(){
        self.user={id:null,username:'',address:'',email:''};
        $scope.myForm.$setPristine() //reset Form;
    }
}]);